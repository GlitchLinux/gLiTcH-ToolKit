#!/bin/bash

# Check if running as root
if [ "$(id -u)" -ne 0 ]; then
    echo "ERROR: This script must be run as root (use sudo)." >&2
    exit 1
fi

# Show available .img files
echo "Available .img files in current directory:"
ls *.img 2>/dev/null || echo "No .img files found here."

# Ask user for .img file path
read -p "Enter the .img file name (or full path): " IMG_FILE
if [ ! -f "$IMG_FILE" ]; then
    echo "ERROR: File '$IMG_FILE' not found!" >&2
    exit 1
fi

# Attach image as writable loop device
echo "Attaching $IMG_FILE as writable loop device..."
LOOP_DEV=$(sudo losetup -fP --show "$IMG_FILE")
if [ -z "$LOOP_DEV" ]; then
    echo "ERROR: Failed to attach loop device!" >&2
    exit 1
fi

# Create mount point
MOUNT_POINT="/mnt/${IMG_FILE%.*}_mount"
mkdir -p "$MOUNT_POINT"

# Mount the entire device (not partitions) with write access
echo "Mounting entire virtual disk as writable..."
mount -o rw,loop "$IMG_FILE" "$MOUNT_POINT"
if [ $? -ne 0 ]; then
    echo "ERROR: Failed to mount the image!" >&2
    losetup -d "$LOOP_DEV"
    exit 1
fi

# Success message
echo "---------------------------------------------"
echo "SUCCESS: $IMG_FILE mounted at $MOUNT_POINT (R/W)"
echo "Device: $LOOP_DEV"
echo ""
echo "To unmount later, run:"
echo "  sudo umount $MOUNT_POINT"
echo "  sudo losetup -d $LOOP_DEV"
echo "  rmdir $MOUNT_POINT (optional)"
echo "---------------------------------------------"
