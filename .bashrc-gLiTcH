#!/bin/bash

# Script to install the custom gLiTcH Linux .bashrc theme
# and backup the existing configuration.

BASHRC_FILE="$HOME/.bashrc"
TIMESTAMP=$(date +%Y%m%d_%H%M%S)
BACKUP_FILE="${BASHRC_FILE}.bak_${TIMESTAMP}"

echo "--- gLiTcH Linux .bashrc Installer ---"

# 1. Check for existing .bashrc and create backup
if [ -f "$BASHRC_FILE" ]; then
  echo "[INFO] Found existing configuration at $BASHRC_FILE"
  echo "[INFO] Creating backup: $BACKUP_FILE ..."
  if cp "$BASHRC_FILE" "$BACKUP_FILE"; then
    echo "[SUCCESS] Backup created successfully."
  else
    echo "[ERROR] Failed to create backup. Aborting."
    exit 1
  fi
else
  echo "[INFO] No existing $BASHRC_FILE found. Skipping backup."
fi

# 2. Write the new .bashrc configuration using a heredoc
echo "[INFO] Writing new gLiTcH Linux .bashrc configuration..."

# Use 'EOF' to prevent expansion within the heredoc
cat > "$BASHRC_FILE" << 'EOF'
# ~/.bashrc: executed by bash(1) for non-login shells.
# gLiTcH Linux Custom Bash Configuration
# Theme: Green on Black (Inspired by splash.jpg)

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# --- History Control ---
# Don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# Append to the history file, don't overwrite it
shopt -s histappend

# Set history length
HISTSIZE=10000
HISTFILESIZE=20000

# Check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# --- Color Settings ---
# Uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# is on the output of commands, not on the prompt
force_color_prompt=yes

if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
    # We have color support; assume it's compliant with Ecma-48
    # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
    # a case would tend to support setf rather than setaf.)
    color_prompt=yes
else
    color_prompt=no
fi

# Enable color support of ls, grep, etc.
if [ "$color_prompt" = yes ]; then
    # Set variable identifying the filesystem color scheme of graphical GNU ls
    export LS_COLORS='rs=0:di=1;92:ln=1;96:mh=0:pi=40;33:so=1;95:do=1;95:bd=40;33;1:cd=40;33;1:or=40;31;1:mi=0:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=1;91:*~=0;90:*bak=0;90:*.log=0;90:*.txt=0;37:*.md=0;37:*.sh=1;93:*.py=1;93:*.js=1;93:*.c=1;93:*.cpp=1;93:*.h=1;93:*.php=1;93:*.pl=1;93:*.rb=1;93:*.json=0;37:*.xml=0;37:*.html=0;37:*.css=0;37:*.jpg=1;95:*.jpeg=1;95:*.png=1;95:*.gif=1;95:*.svg=1;95:*.bmp=1;95:*.tiff=1;95:*.webp=1;95:*.mp3=0;95:*.ogg=0;95:*.wav=0;95:*.flac=0;95:*.opus=0;95:*.mp4=0;95:*.mkv=0;95:*.avi=0;95:*.mov=0;95:*.wmv=0;95:*.zip=1;91:*.tar=1;91:*.gz=1;91:*.bz2=1;91:*.xz=1;91:*.7z=1;91:*.rar=1;91:*.iso=1;91:*.deb=1;91:*.rpm=1;91:*.pdf=0;91:*.gpg=1;94:*.asc=1;94:'
    export LS_OPTIONS='--color=auto'
    export GREP_OPTIONS='--color=auto'
    alias grep='grep $GREP_OPTIONS'
    alias egrep='egrep $GREP_OPTIONS'
    alias fgrep='fgrep $GREP_OPTIONS'
    alias ls='ls $LS_OPTIONS'
fi

# --- Custom Prompt (PS1) ---
if [ "$color_prompt" = yes ]; then
    # Colors (Adjust as needed)
    L_GREEN="\[\e[1;92m\]" # Light/Bright Green
    D_GREEN="\[\e[0;32m\]" # Darker Green
    WHITE="\[\e[1;97m\]"
    RESET="\[\e[0m\]"     # Reset color

    # Prompt Symbol (# for root, $ for user)
    if [ "$(id -u)" -eq 0 ]; then
       P_SYMBOL="#"
    else
       P_SYMBOL="$"
    fi

    # PS1 Structure: [User]@[Host]:[Path][Symbol]
    # Simple Green Theme:
    # PS1="${L_GREEN}\u@\h${D_GREEN}:\w${L_GREEN}${P_SYMBOL}${RESET} "

    # Glitchy/Minimalist Theme (User:Path Symbol): -> THIS ONE IS ACTIVE
    PS1="${L_GREEN}\u${D_GREEN}:> ${L_GREEN}\w ${L_GREEN}${P_SYMBOL}${RESET} "

    # Glitchy Theme with Hostname Abbreviation (e.g., first letter):
    # HOST_ABBREV=$(hostname | cut -c1)
    # PS1="${L_GREEN}\u@${HOST_ABBREV}${D_GREEN}:> ${L_GREEN}\w ${L_GREEN}${P_SYMBOL}${RESET} "

else
    # Standard prompt if no color
    PS1='\u@\h:\w\$ '
fi
# Unset color variables
unset color_prompt force_color_prompt L_GREEN D_GREEN WHITE RESET P_SYMBOL HOST_ABBREV

# --- Aliases ---
# Common shortcuts
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias cls='clear'
alias path='echo -e ${PATH//:/\\n}' # Print $PATH nicely

# ls aliases
alias l='ls -CF'
alias la='ls -A'
alias ll='ls -alFh' # Human readable sizes, show all, classify
alias ls='ls --color=auto' # Ensure ls is always colorized if available

# grep aliases
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'

# Debian/Apt aliases (use with caution, especially -y)
alias update='sudo apt update && sudo apt full-upgrade -y'
alias search='apt search'
alias install='sudo apt install -y'
alias remove='sudo apt remove -y'
alias autoremove='sudo apt autoremove -y'
alias clean='sudo apt clean'

# Network aliases
alias ports='sudo netstat -tulnp' # Listening ports (requires net-tools)
alias ports-ss='sudo ss -tulnp'   # Listening ports (modern alternative)
alias myip-local='ip -4 addr show | grep inet | grep -v "127.0.0.1" | awk "{print \$2}" | cut -d "/" -f 1'
alias myip-public='curl -s ifconfig.me || curl -s api.ipify.org || echo "Cannot fetch public IP"'

# Security/Misc aliases
alias sha256='sha256sum'
alias md5='md5sum'
# Add more custom aliases relevant to gLiTcH Linux tools here

# --- Functions ---
# Create a directory and cd into it
mkcd() {
    mkdir -p "$@" && cd "$@" || return
}

# Extract various archive types
extract() {
    if [ -z "$1" ]; then
        echo "Usage: extract <filename>"
        return 1
    fi

    if [ -f "$1" ] ; then
        case "$1" in
            *.tar.bz2) tar xvjf "$1" ;;
            *.tar.gz)  tar xvzf "$1" ;;
            *.tar.xz)  tar xvJf "$1" ;;
            *.bz2)     bunzip2 "$1" ;;
            *.rar)     unrar x "$1" ;; # Requires unrar package
            *.gz)      gunzip "$1" ;;
            *.tar)     tar xvf "$1" ;;
            *.tbz2)    tar xvjf "$1" ;;
            *.tgz)     tar xvzf "$1" ;;
            *.zip)     unzip "$1" ;;
            *.Z)       uncompress "$1" ;;
            *.7z)      7z x "$1" ;;     # Requires p7zip-full package
            *.deb)     dpkg -x "$1" "${1%.deb}" ;; # Extract deb to dir
            *)         echo "'$1' cannot be extracted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

# --- Bash Completion ---
# Enable bash completion in interactive shells
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# --- Optional Welcome Message ---
# Uncomment the following lines to show a message on terminal start
# if [ -z "$DISPLAY" ]; then # Only show in TTY/non-graphical? Or remove check to always show
#     L_GREEN="\e[1;92m"
#     RESET="\e[0m"
#     echo -e "${L_GREEN}"
#     echo '  ________.__    .___ .__   __.   .__     '
#     echo ' /  _____/|  |__ |   ||__|_/_ |   |__| ____   ____  '
#     echo '/   \  ___|  |  \|   ||  |\  ||   |  |/    \_/ __ \ '
#     echo '\    \_\  \   Y  \   ||  | \ ||   |  |   |  \  ___/ '
#     echo ' \______  /___|  /___||__|  \__\ /\|__|___|  /\___  >'
#     echo '        \/     \/                 \/       \/     \/ '
#     echo '        :: Security Through Obscurity ::            '
#     echo -e "${RESET}"
# fi
# unset L_GREEN RESET # Clean up temp vars

# --- Set Default Editor ---
export EDITOR=nano # Or vim, emacs, etc.
# export VISUAL="$EDITOR" # Often good to set VISUAL too

# --- User Customizations ---
# Add any other personal aliases, functions, or settings below this line


# End of gLiTcH Linux .bashrc
EOF

# Check if write was successful (simple check: file exists and is not empty)
if [ -s "$BASHRC_FILE" ]; then
  echo "[SUCCESS] New .bashrc configuration written successfully."
else
  echo "[ERROR] Failed to write new .bashrc configuration."
  echo "[INFO] Your original .bashrc might still be available as $BACKUP_FILE (if backup was created)."
  exit 1
fi

echo "--- Installation Complete ---"
echo ""
echo "To apply the new settings, please either:"
echo "  1. Close this terminal and open a new one."
echo "  2. Run the command: source ~/.bashrc"
echo ""
echo "Your previous configuration was backed up to: $BACKUP_FILE"
echo ""

exit 0
